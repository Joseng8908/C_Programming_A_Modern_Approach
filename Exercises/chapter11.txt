exer1)
a, g

exer2)
d, f, i //answer : e, f, i

exer3)
void avg_sum(double a[], int n,  double *avg, double *sum)
{
	int i;

	*sum = 0.0;
	for (i = 0; i < n; i++)
		*sum += a[i];
	*avg = *sum / n;
}

exer4)
void swap(int *p, int *q)
{
	int temp;
	temp = *p;
	*p = *q;
	*q = temp;
}

exer5)
void split_time(long total_sec, int *hr, int *min, int *sec)
{
	*hr = total_sec / 3600;
	total_sec = total_sec % 3600;
	*min = total_sec / 60;
	total_sec = total_sec % 60;
	*sec = total_sec;
}

exer6)
void find_two_largest(int a[], int n, int *largest, int *second_largest)
{
	*largest = a[0];
	*second_largest = a[0]];
	for	(int i = 0; i < n; i++) 
		if (a[i] > *largest) 
			*largest = a[i];
	for (int i = 0; i < n; i++)
		if (a[i] > *second_largest && *largest > a[i])
			*second_largest = a[i];
}

exer7)
void split_date(int day_of_year, int year, int *month, int *day)
{
	year = 
	*month = day_of_year / 31;
	day_of_year = day_of_year % 31;
	*day = day_of_year;
}

exer8)
int *find_largest(int a[], int n)
{
	int large = 0;
	int *p;
	for (int i = 0; i < n; i++) 
		if (large < a[i])
			p = &a[i];
	return p; 
}
